#!/usr/bin/env python

__usage__ = "dagwriter-naive_bayes_timeseries [--options] gpsstart gpsstop chanlist.txt"
__description__ = """\
generate a NaiveBayes classifier based on the channels in chanlist.txt and compute an assoicated timeseries within [gpsstart, gpsstop]. \
We assume chanlist.txt is an ASCII file with each line containing a channel name and its sample rate, corresponding to the output format of FrChannels"""
__author__ = "Reed Essick (reed.essick@ligo.org)"

#-------------------------------------------------

import os
import glob

import subprocess as sp

import numpy as np

import matplotlib
matplotlib.use("Agg")
from matplotlib import pyplot as plt
plt.rcParams['text.usetex'] = True

from optparse import OptionParser

### non-standard libraries
from naivebayes import utils

#-------------------------------------------------

parser = OptionParser(usage=__usage__, description=__description__)

parser.add_option('-v', '--verbose', default=False, action='store_true')

parser.add_option('', '--stride', default=3600, type='float',
    help='the stride used for parallelization via condor. \
DEFAULT=3600')

parser.add_option('', '--srate', default=64, type='float',
    help='sample rate for things like p-value estimates, specified in Hz. \
DEFAULT=64')
parser.add_option('', '--window', default=1000, type='float',
    help='the window used for rate estimates (gps+/-opts.window), specified in sec. \
DEFAUL=1000')

parser.add_option('', '--exclude', default=[], type='string', action='append',
    help='an exact match for KW channel names that you want excluded')

parser.add_option('', '--kwsignif-thr', default=[15.0], type='float', action='append',
    help='the kwsignif threshold over which we maximize when computing pointy-Poisson statistic. \
DEFAULT=[15.0]')

parser.add_option('', '--skip-kwtrg-generation', default=False, action='store_true')
parser.add_option('', '--kwstride', default=32, type='int', 
    help='DEFAULT=32')
parser.add_option('', '--frametype', default='L1_R', type='string', 
    help='used for KW trigger generation and naming convention. \
DEFAULT=L1_R')

parser.add_option('', '--plot', default=False, action='store_true',
    help='generate plots in addition to the npz files')
parser.add_option('', '--plot-start-dur', nargs=2, default=[], type='float', action='append',
    help='generate zoomed plots using this window. Can be repeated. \
DEFAULT=[]')

parser.add_option('', '--reference-gps', default=None, type='float')
parser.add_option('', '--frac-of-dur', default=0.01, type='float',
    help='the fraction of the trigger duration used as the minimum dt in the pointy statistic. \
DEFAULT=0.01')

parser.add_option('-o', '--output-dir', default='.', type='string')
parser.add_option('-t', '--tag', default='', type='string')

parser.add_option('', '--do-not-save-singlechan', default=False, action='store_true',
    help='do not save npy files for individual channels. Could help speed up run-time')
parser.add_option('', '--do-not-plot-singlechan', default=False, action='store_true',
    help='do not plot results for individual channels. Could help speed up run-time')

opts, args = parser.parse_args()
assert len(args)==3, "please supply exactly 3 input arguments\n%s"%__usage__
gpsstart, gpsstop = [float(_) for _ in args[:2]]

opts.output_dir = os.path.abspath(opts.output_dir)
if not os.path.exists(opts.output_dir):
    os.makedirs(opts.output_dir)

if opts.tag:
    filetag = "_"+opts.tag
else:
    filetag = ""

#-------------------------------------------------

raise NotImplementedError, '''write the dag
    1) generate all KW triggers
    2) split up the jobs into strides and make timeseries for each -> condor-naive_bayes_timeseries
    3) plot small npy files in one big figure if needed
'''
